#
# ToDo:
#  1) Use API to disable password expiration for admin.  Documented here: https://docs.vmware.com/en/VMware-NSX-T-Data-Center/3.0/installation/GUID-89E9BD91-6FD4-481A-A76F-7A20DB5B916C.html
#
#
# https://10.203.240.12/api/v1/node/users/<userid>
#
#{
#  "password_change_frequency": 50
#}
#
#
#
#
# https://10.203.240.12/api/v1/node/users
#
#{
#  "_schema": "NodeUserPropertiesListResult",
#  "_self": {
#    "href": "/node/users",
#    "rel": "self"
#  },
#  "result_count": 3,
#  "results": [
#    {
#      "full_name": "root",
#      "last_password_change": 0,
#      "password_change_frequency": 90,
#      "status": "ACTIVE",
#      "userid": 0,
#      "username": "root"
#    },
#    {
#      "full_name": "",
#      "last_password_change": 0,
#      "password_change_frequency": 90,
#      "status": "ACTIVE",
#      "userid": 10000,
#      "username": "admin"
#    },
#    {
#      "full_name": "",
#      "last_password_change": 0,
#      "password_change_frequency": 90,
#      "status": "ACTIVE",
#      "userid": 10002,
#      "username": "audit"
#    }
#  ]
#}
#


---
- hosts: localhost
  name: DisablePasswordExpiration.yml
  tasks:
    - name: Display error message if Pod-XXX-Config file is not valid or provided
      pause:
        seconds: 5
        prompt: |
          *****************************************************************************************************
          ****************************************** ERROR MESSAGE ********************************************
          *****************************************************************************************************

            A valid "Pod-XXX-Config.yml" file is required in order for this playbook to run.

            Please verify:
            ==============
              1) You supplied a valid Pod-XXX-Config.yml file via the ansible-playbook -e "@Pod-XXX-Config.yml"
                 command-line option.  Here is an example of a how to load a Pod-XXX-Config.yml file that is
                 located in your home directory:
                                    ansible-playbook -e "@~/Pod-XXX-Config.yml" deploy.yml

              2) The Pod-XXX-Config.yml file provided was created using the playbooks/createPodConfig.yml script.
                 All Pod configuration files used to deploy labs MUST be generated using that script.

              3) You included the proper path with the "-e" option to the Pod-XXX-Config.yml file.

              4) You prefaced the file name in the "-e" option with a '@', as shown in the example above.

          *****************************************************************************************************
      when:
        - Valid_Pod_Config_File is not defined

    - name: Exit Ansible playbook if Pod-XXX-Config.yml file is not valid or provided
      meta: end_play
      when: Valid_Pod_Config_File is not defined


    - name: DEBUG -- Display Target Variables (Pause)
      pause:
        seconds: 1
        prompt: |
          ================================ Display Variables For Pod {{ '%03d'|format(Pod.Number|int) }} ==================================


                                     Ansible Playbook: {{ ansible_play_name }}

                                    Target.Deployment: {{ Target.Deployment }}

                                          Target.FQDN: {{ Target.FQDN }}
                                          Target.User: {{ Target.User }}
                                      Target.Password: {{ Target.Password }}
                                       Target.Cluster: {{ Target.Cluster }}
                                    Target.DataCenter: {{ Target.DataCenter }}
                                     Target.Datastore: {{ Target.Datastore }}
                                      Target.VMFolder: {{ Target.VMFolder }}

                                           NSX-T Role: {{ Nested_NSXT.Component.LocalManager.Deployment.Role }}
                                        NSX-T Version: {{ Deploy.Software.NSXT.Version }}
                                   NSX-T Manager FQDN: {{ Nested_NSXT.Component.LocalManager.FQDN }}
                                         NSX-T VMName: {{ Nested_NSXT.Component.LocalManager.VMName }}

          =================================================================================================

    - name: Obtain list of users
      uri:
        url: https://{{ Nested_NSXT.Component.LocalManager.FQDN | lower }}/api/v1/node/users
        validate_certs: no
        timeout: 10
        force_basic_auth: yes
        url_username: "{{ Nested_NSXT.Credential.admin.Name }}"
        url_password: "{{ Nested_NSXT.Credential.admin.Password }}"
        method: GET
        body_format: json
        return_content: yes
        status_code: 200
      register: UserList

    - name: Display UserList (Pause)
      pause:
        seconds: "{{ DEBUG.DisplayDelayInSeconds }}"
        prompt: |
          ================================ Display Variables For Pod {{ '%03d'|format(Pod.Number|int) }} ==================================

              UserList
              ========
              {{ UserList.json.results | to_nice_json }}

          =================================================================================================

    - name: Disable Password Expiration Of All Users
      uri:
        url: https://{{ Nested_NSXT.Component.LocalManager.FQDN | lower }}/api/v1/node/users/{{ item.userid }}
        validate_certs: no
        timeout: 15
        force_basic_auth: yes
        url_username: "{{ Nested_NSXT.Credential.admin.Name }}"
        url_password: "{{ Nested_NSXT.Credential.admin.Password }}"
        method: PUT
        body_format: json
        body: '{ "password_change_frequency": 0 }'
        return_content: yes
        status_code: 200
      loop: "{{ UserList.json.results }}"
      when: item.userid > 0

    - name: Obtain list of users
      uri:
        url: https://{{ Nested_NSXT.Component.LocalManager.FQDN | lower }}/api/v1/node/users
        validate_certs: no
        timeout: 10
        force_basic_auth: yes
        url_username: "{{ Nested_NSXT.Credential.admin.Name }}"
        url_password: "{{ Nested_NSXT.Credential.admin.Password }}"
        method: GET
        body_format: json
        return_content: yes
        status_code: 200
      register: response

    - name: Display UserList (Pause)
      pause:
        seconds: "{{ DEBUG.DisplayDelayInSeconds }}"
        prompt: |
          ================================ Display Variables For Pod {{ '%03d'|format(Pod.Number|int) }} ==================================

              UserList
              ========
              {{ response.json.results | to_nice_json }}

          =================================================================================================

